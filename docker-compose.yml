version: '3'
services:
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - main_network
    deploy:
      mode: replicated
      replicas : 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.role != manager

  flask-app:
    image: flask-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - redis
    deploy:
      replicas : 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.role != manager
    
    networks:
      - main_network
    
  portainer:
    image: portainer/portainer-ce
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: -H unix:///var/run/docker.sock

    deploy:
      placement:
        constraints:
          - node.role == manager


  prometheus:
    image: prom/prometheus:latest
    container_name: webscrapper-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    depends_on:
      - flask-app
    networks:
      - main_network
    deploy:
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    container_name: webscrapper-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning/
    env_file:
      - ./env/config.monitoring
    depends_on:
      - prometheus
    networks:
      - main_network
    deploy:
      placement:
        constraints:
          - node.role == manager

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - grafana
    networks:
      - main_network
    deploy:
      placement:
        constraints:
          - node.role == manager

networks:
  main_network:
